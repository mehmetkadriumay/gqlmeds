import { ApolloServer } from "apollo-server-azure-functions";
import { typeDefs } from "./well";
import { CosmosDataSource } from "apollo-datasource-cosmosdb";
import { CosmosClient } from "@azure/cosmos";
import { WellDataSource } from "./data-sources/wells.js";

const cosmosClient = new CosmosClient(
    process.env.COSMOS_CONNECTION_STRING
);

const cosmosContainer = cosmosClient
.database(process.env.COSMOS_DATABASE_NAME)
.container('well-delivery');

const resolvers = {
    Query: {
        well:async (_, params, context) => {
            return context.dataSources.WellDataSource.findOneByWellID(params.well_id);
        }
    }
};

const server = new ApolloServer({
    typeDefs,
    resolvers,
    dataSources: () => ({
      well: new WellDataSource(cosmosContainer)
    }),
  });

export const run = server.createHandler();